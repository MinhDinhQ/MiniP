@page "/post/{id}"
@using kreddit_app.Data;
@using shared.Model;
@inject ApiService apiService
@inject NavigationManager Navigation;

<PageTitle>Kreddit</PageTitle>

<style>
    .content-container {
        background: #fff;
        border: 1px solid #000;
        border-radius: 5px;
        padding: 15px;
        max-width: 100%;
        margin-top: 20px;
    }

    .btn {
        background: none;
        border: 1px solid #000;
        padding: 5px 10px;
        cursor: pointer;
    }

    .btn:hover {
        background: #000;
        color: #fff;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 10px;
    }

    th, td {
        border: 1px solid #000;
        padding: 5px;
        text-align: left;
    }

    th {
        background: #000;
        color: #fff;
    }
</style>

<button class="btn" @onclick="NavigateToHome">Home</button>

@if (Post == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="content-container">
        <h2>@Post.Title</h2>
        <p><strong>@Post.User.Username</strong> - Votes: @(Post.Upvotes - Post.Downvotes)</p>
        <p>@Post.Content</p>
<br/>
        <CreateComment PostId="@PostId"></CreateComment>
<br/>
        <h3>Comments</h3>
        @if (Post.Comments != null && Post.Comments.Any())
        {
            <table>
                <thead>
                    <tr>
                        <th>User</th>
                        <th>Comment</th>
                        <th>Votes</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var comment in Post.Comments)
                    {
                        <tr>
                            <td>@comment.User.Username</td>
                            <td>@comment.Content</td>
                            <td>@(comment.Upvotes - comment.Downvotes)</td>
                            <td>
                                <button class="btn" @onclick="() => UpvoteComment(comment.Id)">▲</button>
                                <button class="btn" @onclick="() => DownvoteComment(comment.Id)">▼</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>No comments available.</p>
        }
    
    </div>
}

@code {
    [Parameter]
    public string Id { get; set; }
    public int PostId => int.Parse(Id);
    public Post Post { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Post = await apiService.GetPost(PostId);
            Post.Comments = Post?.Comments ?? new List<Comment>();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    private async Task UpvoteComment(int id)
    {
        var updatedComment = await apiService.UpvoteComment(id);
        var comment = Post.Comments.FirstOrDefault(c => c.Id == id);
        if (comment != null) comment.Upvotes = updatedComment.Upvotes;
    }

    private async Task DownvoteComment(int id)
    {
        var updatedComment = await apiService.DownvoteComment(id);
        var comment = Post.Comments.FirstOrDefault(c => c.Id == id);
        if (comment != null) comment.Downvotes = updatedComment.Downvotes;
    }

    private void NavigateToHome()
    {
        Navigation.NavigateTo("/");
    }
}
