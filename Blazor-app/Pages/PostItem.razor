@page "/post/{id}"
@using kreddit_app.Data;
@using shared.Model;
@inject ApiService apiService
@inject NavigationManager Navigation;

<PageTitle>Kreddit</PageTitle>

<style>
div.contents {
  background-color: #f2f0eb;
  width: 600px;
  border: 2px solid #452d3d;
  padding: 10px;
  margin-top: 20px;
}
</style>

@if (Post == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="contents">
        <h4>@Post.Title</h4>
        <p><strong>User: @Post.User.Username, Votes: @(Post.Upvotes - Post.Downvotes)</strong></p>
        <p>@Post.Content</p>
    </div>

    <div class="contents">
        <h4>Comments</h4>
        @if (Post.Comments != null && Post.Comments.Any())
        {
            <table>
                <tr>
                    <th>User</th>
                    <th>Comment</th>
                    <th colspan="3">Votes</th>
                </tr>
                @foreach (var comment in Post.Comments)
                {
                    <tr>
                        <td>@comment.User.Username</td>
                        <td>@comment.Content</td>
                        <td>@(comment.Upvotes - comment.Downvotes)</td>
                        <td><button @onclick="() => Upvote(comment.Id)">Upvote</button></td>
                        <td><button @onclick="() => Downvote(comment.Id)">Downvote</button></td>
                    </tr>
                }
            </table>
        }
        else
        {
            <p>No comments available.</p>
        }
    </div>

    <CreateComment PostId="@PostId"></CreateComment>
    
    <!-- Home button to navigate back to the homepage -->
    <button @onclick="NavigateToHome">Go to Home</button>  <!-- Home button -->
}

@code {
    [Parameter]
    public string Id { get; set; }
    public int PostId { get { return int.Parse(Id); } }
    public Post Post { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Hent posten
            Post = await apiService.GetPost(PostId);

            // Hent kommentarer for posten, hvis posten findes
            if (Post != null)
            {
                Post.Comments = Post.Comments ?? new List<Comment>(); // Sikre at Comments ikke er null
            }
            else
            {
                Console.WriteLine("Post not found!");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    private async void Upvote(int id)
    {
        Console.WriteLine("Not implemented 😪");
    }

    private async void Downvote(int id)
    {
        Console.WriteLine("Not implemented 😪");
    }

    private void NavigateToHome()
    {
        Navigation.NavigateTo("/");
    }
}
