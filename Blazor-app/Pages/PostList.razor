@inherits LayoutComponentBase
@using kreddit_app.Data
@using shared.Model
@inject ApiService apiService

@if (posts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table>
        <tr>
            <th>Title</th>
            <th>Content</th>
            <th>Votes</th>
        </tr>
        @foreach (var post in posts)
        {
            <tr>
               
                <td><a href="/post/@post.Id">@post.Title</a></td>
                <td>@post.Content</td>
                <td>@(post.Upvotes - post.Downvotes)</td>
                <td>
                    <button @onclick="() => Upvote(post.Id)">Upvote</button>
                    <button @onclick="() => Downvote(post.Id)">Downvote</button>
                </td>
            </tr>
        }
    </table>

    <br/>
}

@code {
    private Post[]? posts;

    protected override async Task OnInitializedAsync()
    {
        posts = await apiService.GetPosts();
    }

    private async void Upvote(int id)
    {
   
        var updatedPost = await apiService.UpvotePost(id);

        var post = posts?.FirstOrDefault(p => p.Id == id);
        if (post != null)
        {
            post.Upvotes = updatedPost.Upvotes; 
        }
    }

  private async void Downvote(int id)
{
    try
    {
        
        var updatedPost = await apiService.DownvotePost(id);

       
        var post = posts?.FirstOrDefault(p => p.Id == id);
        if (post != null)
        {
            post.Downvotes = updatedPost.Downvotes; 
        }
    }
    catch (Exception ex)
    {
        Console.WriteLine($"Error downvoting post {id}: {ex.Message}");
    }
}

}